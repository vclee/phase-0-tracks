### RELEASE 3: EXECUTE SQL QUERIES

1. Display the information in one table (either table is fine).

SELECT * FROM books;

1|The Cat in the Hat|61|false|4
2|Harry Potter and the Chamber of Secrets|341|True|1
3|The Shining|450|false|2
4|Harry Potter and the Goblet of Fire|752|true|1
5|Sense and Sensibility|320|false|3
6|Mansfield Park|480|false|3
7|One Fish Two Fish Red Fish Blue Fish|61|false|4
8|Harry Potter and the Deathly Hallows|784|true|1


2. Update an item that meets some condition (you can choose a condition that makes sense).

### incase Stephen King decided to write a sequel to The Shining:
UPDATE books SET is_series="true" WHERE title="The Shining";

1|The Cat in the Hat|61|false|4
2|Harry Potter and the Chamber of Secrets|341|True|1
3|The Shining|450|true|2
4|Harry Potter and the Goblet of Fire|752|true|1
5|Sense and Sensibility|320|false|3
6|Mansfield Park|480|false|3
7|One Fish Two Fish Red Fish Blue Fish|61|false|4
8|Harry Potter and the Deathly Hallows|784|true|1


3. Display the information in both tables using one query.

SELECT * FROM books, authors WHERE books.author_id = authors.id;

1|The Cat in the Hat|61|false|4|Dr. Seuss|4
2|Harry Potter and the Chamber of Secrets|341|True|1|J. K. Rowling|1
3|The Shining|450|false|2|Stephen King|2
4|Harry Potter and the Goblet of Fire|752|true|1|J. K. Rowling|1
5|Sense and Sensibility|320|false|3|Jane Austen|3
6|Mansfield Park|480|false|3|Jane Austen|3
7|One Fish Two Fish Red Fish Blue Fish|61|false|4|Dr. Seuss|4
8|Harry Potter and the Deathly Hallows|784|true|1|J. K. Rowling|1


4. Display a narrower selection of columns (fewer columns than all of them, in other words) from both tables using one query.

SELECT books.title, authors.name FROM books JOIN authors ON books.author_id = authors.id;

The Cat in the Hat|Dr. Seuss
Harry Potter and the Chamber of Secrets|J. K. Rowling
The Shining|Stephen King
Harry Potter and the Goblet of Fire|J. K. Rowling
Sense and Sensibility|Jane Austen
Mansfield Park|Jane Austen
One Fish Two Fish Red Fish Blue Fish|Dr. Seuss
Harry Potter and the Deathly Hallows|J. K. Rowling


5. Delete an item that meets some condition (you can choose a condition that makes sense).

DELETE FROM books WHERE title="Harry Potter and the Deathly Hallows";

1|The Cat in the Hat|61|false|4
2|Harry Potter and the Chamber of Secrets|341|True|1
3|The Shining|450|true|2
4|Harry Potter and the Goblet of Fire|752|true|1
5|Sense and Sensibility|320|false|3
6|Mansfield Park|480|false|3
7|One Fish Two Fish Red Fish Blue Fish|61|false|4


### RELEASE 3: RESEARCH ON YOUR OWN

1. There are lots of different kinds of joins. What are they? Can you apply different
conditions to a join to change what's displayed? Can you bookmark any good diagrams
that will help you tell different joins apart in the future?

The different SQLite joins are: Inner Join, Left Join, Cross Join, Self Join, Full Outer Join (not yet supported by sqlite).
You can filter what's being displayed from the joined tables by using NATURAL or USING or ON.
You can also use conditional expressions like the <, >, and = operators.
I found this diagram that is useful for differentiating Joins:
http://i.imgur.com/hhRDO4d.png


2. Try a few different joins in your database, and record the commands and the output in queries.txt.

### LEFT OUTER JOIN
SELECT name FROM authors LEFT OUTER JOIN books ON books.author_id = authors.id WHERE is_series = "true";

### only displays series authors
(after adding Twilight to BOOKS, and Stephenie Meyer to AUTHORS)

J. K. Rowling
Stephenie Meyer

### INNER JOIN (same as JOIN)
SELECT books.title, authors.name FROM books INNER JOIN authors ON authors.id = books.author_id WHERE is_series = "true";

### only displays series and their authors

Harry Potter and the Chamber of Secrets|J. K. Rowling
Harry Potter and the Goblet of Fire|J. K. Rowling
Twilight|Stephenie Meyer
